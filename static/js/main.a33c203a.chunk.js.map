{"version":3,"sources":["thonking.png","emoji.jsx","emojihand.jsx","background.jsx","adjusting_size.jsx","App.js","serviceWorker.js","index.js","hand.png"],"names":["module","exports","Face","className","style","position","top","this","props","height","left","width","src","face","alt","Component","Hand","x","limit","hand","BackgroundImage","Adjust","state","seconds","posx","y","posy","x_increment","y_increment","setState","prevState","interval","setInterval","tick","clearInterval","size","App","limitx","window","innerWidth","innerHeight","browserx","browsery","e","clientX","onMouseMove","_onMouseMove","bind","Helmet","Math","random","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a33c203a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thonking.76f28cbe.png\";","import React, { Component } from \"react\";\r\nimport face from \"./thonking.png\";\r\n\r\nclass Face extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"face emoji\"\r\n        style={{\r\n          position: \"absolute\",\r\n          top: this.props.height*0.2,\r\n          left: this.props.width*0.3\r\n        }}\r\n      >\r\n        <img src={face} alt=\"face\" height={this.props.height*0.6} width={this.props.width*0.4} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Face;\r\n","import React, { Component } from \"react\";\r\nimport hand from \"./hand.png\";\r\n\r\nclass Hand extends Component {\r\n  render() {\r\n    var x = this.props.left\r\n    if (x < this.props.limit) {\r\n      x = this.props.limit;\r\n      }\r\n    if (x > 1.75*this.props.limit) {\r\n      x = 1.75*this.props.limit;\r\n    }\r\n    return (\r\n      <div >\r\n        <img\r\n          src={hand}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: (this.props.top),\r\n            left: x\r\n          }}\r\n\r\n          alt=\"hand\"\r\n          height={this.props.height}\r\n          width={this.props.width}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hand;","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass BackgroundImage extends Component {\r\n  render() {\r\n    return <div className=\"bg\"></div>;\r\n  }\r\n}\r\n\r\nexport default BackgroundImage;\r\n","import React, { Component } from \"react\";\r\nimport hand from \"./hand.png\";\r\n\r\nclass Adjust extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 0,\r\n      x: this.props.posx,\r\n      y: this.props.posy,\r\n      x_increment: 1,\r\n      y_increment: 1\r\n    };\r\n  }\r\n\r\n  tick() {\r\n    if (this.state.x > this.props.x - this.props.x / 8)\r\n      this.setState({ x_increment: -1 });\r\n    if (this.state.x <= 50) this.setState({ x_increment: 1 });\r\n    if (this.state.y > this.props.y - this.props.x / 8)\r\n      this.setState({ y_increment: -1 });\r\n    if (this.state.y <= 100) this.setState({ y_increment: 1 });\r\n    this.setState(prevState => ({\r\n      seconds: prevState.seconds + 1,\r\n      x: (prevState.x += this.state.x_increment * 10),\r\n      y: (prevState.y += this.state.y_increment * 10)\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.tick(), 50);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    var size = this.state.seconds * 10;\r\n    if (size > this.props.x / 10) size = this.props.x / 10;\r\n    return (\r\n      <div>\r\n        <img\r\n          src={hand}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: this.state.y,\r\n            left: this.state.x\r\n          }}\r\n          alt=\"hand\"\r\n          height={size}\r\n          width={size}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Adjust;\r\n","import React, { Component } from \"react\";\r\nimport Face from \"./emoji\";\r\nimport Hand from \"./emojihand\";\r\nimport BackgroundImage from \"./background\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Adjust from \"./adjusting_size\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      limitx: window.innerWidth * 0.3,\r\n      x: window.innerWidth * 0.2,\r\n      y: window.innerHeight * 0.45,\r\n      browserx: window.innerWidth,\r\n      browsery: window.innerHeight\r\n    };\r\n  }\r\n  _onMouseMove(e) {\r\n    this.setState({ x: e.clientX });\r\n  }\r\n  render() {\r\n    var { x } = this.state;\r\n\r\n    return (\r\n      <main onMouseMove={this._onMouseMove.bind(this)}>\r\n        <Helmet>\r\n          <title>{\"Thonking-Emoji\"}</title>\r\n        </Helmet>\r\n        <BackgroundImage />\r\n        <Adjust\r\n          x={this.state.browserx}\r\n          y={this.state.browsery}\r\n          posx={Math.random() * this.state.browserx}\r\n          posy={Math.random() * this.state.browsery}\r\n        />\r\n\r\n        <Adjust\r\n          x={this.state.browserx}\r\n          y={this.state.browsery}\r\n          posx={Math.random() * this.state.browserx}\r\n          posy={Math.random() * this.state.browsery}\r\n        />\r\n\r\n        <Adjust\r\n          x={this.state.browserx}\r\n          y={this.state.browsery}\r\n          posx={Math.random() * this.state.browserx}\r\n          posy={Math.random() * this.state.browsery}\r\n        />\r\n        <Face height={this.state.browsery} width={this.state.browserx} />\r\n\r\n        <Hand\r\n          height={this.state.browserx * 0.2}\r\n          width={this.state.browsery * 0.4}\r\n          top={this.state.y}\r\n          left={x}\r\n          limit={this.state.limitx}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hand.9763868f.png\";"],"sourceRoot":""}